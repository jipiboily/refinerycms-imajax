$(document).ready ->
  images = new Images
  $("#new_image").submit (e) ->
    if window.FileList && FormData
      e.preventDefault()
      images.upload_all()
  $("#image_image").change (e) ->
    images.file_list = e.target.files

class Images
  # TODO:
  #   - add a progress bar for each file maybe?
  #   - refresh images index after closing the dialog box...
  constructor: ->
    @authenticity_token = $("meta[name=\"csrf-token\"]").attr("content")
    @form_action = "/refinery/images/ajax_create"
    @cache_dom()

  cache_dom: ->
    @error_list = $("#error_list")
    @success_list = $("#flash")
    @error_explanation = $("#errorExplanation")
    @upload_progress = $("#upload_progress")

  before_upload_all: ->
    @files = []
    @errors = []
    @total_files = @file_list.length
    @uploaded = 0
    @error_explanation.hide()

  upload_all: ->
    @before_upload_all()
    for file in @file_list
      @validate(file)
      @files.push file
    return @render_errors() if @errors.length > 0
    $("#submit_button").hide()
    $(".field").hide()
    @progress "Uploading..."
    @upload_next()

  after_upload_all: ->
    $(".save-loader").hide()
    @upload_progress.hide()
    if @errors.length > 0
      @progress "There was #{@errors.length} error#{(if @errors.length > 1 then "s" else "")}"
      @render_errors()
     else
      @success_list.show()
      setTimeout (->
        parent.window.document.getElementById('dialog_iframe').contentDocument.location.reload(true) if $('#dialog_menu_left').length == 1
        window.parent.document.location.reload() if $('#dialog_menu_left').length == 0
      ), 3000

  validate: (file) ->
    max_file_size = <%= Refinery::Images.max_image_size %>
    if file.size > max_file_size
      @errors.push "#{file.name} should be smaller than #{max_file_size} bytes in size"
    # TODO: set valid file types based on image model validation
    valid_file_types = ["image/jpeg", "image/png", "image/gif", "image/tiff"]
    if valid_file_types.indexOf(file.type) == -1
      @errors.push "#{file.name} should be either a JPG, PNG or GIF"

  upload_next: ->
    @do_upload(@files[0]) unless @files.length == 0
    if @total_files > 0 && @files.length == 0
      @after_upload_all()

  do_upload: (file) =>
    form = new FormData();
    form.append "image", file
    form.append "authenticity_token", @authenticity_token
    _this = @ # save current scope so we can use current object methods within $.ajax
    $.ajax
      type: 'POST'
      url: @form_action
      data: form
      contentType: false
      processData: false
      success: (data) ->
        _this.post_success(file)
      error: (data) ->
        _this.post_error(file, data.responseText)

  after_do_upload: (file) ->
    @files.remove file
    @upload_next()

  post_success: (file) ->
    @progress file.name + " uploaded"
    @success_list.append("#{file.name} <br />")
    @update_progress file
    @after_do_upload file

  post_error: (file, errors) ->
    errors = JSON.parse(errors).image
    @update_progress file, errors
    for e in errors
      @errors.push "#{file.name}: #{e}"
    @after_do_upload file

  render_errors: ->
    $(".save-loader").hide()
    @error_list.html("")
    for error in @errors
      @error_list.append("<li>#{error}</li>")
    @error_explanation.show()

  update_progress: (file, error = null) ->
    @uploaded++
    message = error || "Last upload complete: #{file.name}"
    @progress "#{@uploaded}/#{@total_files} uploaded | #{message}"

  progress: (text) ->
    @upload_progress.html(text);

# adds a remove method to Array
Array::remove = (e) -> @[t..t] = [] if (t = @indexOf(e)) > -1
